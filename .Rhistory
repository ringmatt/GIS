add = TRUE)
points_spdf <-
readr::read_csv('data/raw/wk3/sites.csv') %>%
as.data.frame() %>%
sp::SpatialPointsDataFrame(
coords = .[,c('lon', 'lat')],
data = .,
proj4string = sp::CRS("+init=epsg:4326"))
sp::plot(
states,
col = '#dcdcdc')
sp::plot(
points,
pch = 19,
col = 'red',
add = TRUE)
# Spatial join
sp::over(points_spdf, states) %>%
tibble::as_tibble()
install.packages(c('sf', 'maps'))
# Import data
states <-
rgdal::readOGR('data/raw/spatial/states_dmv/states.shp')
# Load packages
library(sf)
library(tidyverse)
class(states)
str(states)
states@data
# Import data, convert to simple features object
states <-
rgdal::readOGR('data/raw/spatial/states_dmv/states.shp') %>%
st_as_sf()
# Import data, convert to simple features object
states <-
rgdal::readOGR('data/raw/spatial/states_dmv/states.shp') %>%
st_as_sf() %>%
# Change column name for states
rename(state = ID) %>%
# Import additional 1977 state information
left_join(
read_csv('data/raw/spatial/wk3/states_1977.csv'),
by = 'state')
# Import data, convert to simple features object
states <-
rgdal::readOGR('data/raw/spatial/states_dmv/states.shp') %>%
st_as_sf() %>%
# Change column name for states
rename(state = ID) %>%
# Import additional 1977 state information
left_join(
read_csv('data/raw/wk3/states_1977.csv'),
by = 'state')
# Import data, convert to simple features object
states_sf <-
rgdal::readOGR('data/raw/spatial/states_dmv/states.shp') %>%
st_as_sf() %>%
# Change column name for states
rename(state = ID) %>%
# Import additional 1977 state information
left_join(
read_csv('data/raw/wk3/states_1977.csv'),
by = 'state')
# Plot with ggplot
states_sf %>%
rename(state = ID) %>%
left_join(
read_csv('data/raw/states_1977.csv'),
by = 'state') %>%
ggplot() +
geom_sf()
# Plot with ggplot
states_sf %>%
ggplot() +
geom_sf()
# Plot with ggplot
states_sf %>%
ggplot() +
geom_sf(aes(fill = population)) +
scale_fill_viridis_c(option = 'plasma')
states_prj <-
states_sf %>%
mutate(
population_density = population/area) %>%
st_transform(crs = 5070)
st_crs(states_prj)
states_prj %>%
ggplot() +
geom_sf(aes(fill = population_density)) +
scale_fill_gradient2(
low = 'blue',
mid = 'white',
high = 'red',
midpoint = 0.4)
states_prj %>%
ggplot() +
geom_sf(aes(fill = population_density)) +
scale_fill_gradient2(
low = 'blue',
mid = 'white',
high = 'red',
midpoint = 0.4) +
theme_void()
st_is_valid(states_sf)
# % of states with invalid geometries
st_is_valid(states_sf) %>%
sum(.)/nrow(states_sf)
# % of states with invalid geometries
# that are not easily fixable
st_is_valid(states_sf) %>%
st_is_valid() %>%
sum(.)/nrow(states_sf)
# % of states with invalid geometries
# that are not easily fixable
st_make_valid(states_sf) %>%
st_is_valid() %>%
sum(.)/nrow(states_sf)
# Overwrite (don't do irl!) and resave
states_proj <- states_prj %>%
st_make_valid()
sites %>%
read_csv("data/raw/wk3/sites.csv")
sites %>%
read_csv("data/raw/wk3/sites.csv")
sites <-
read_csv("data/raw/wk3/sites.csv")
# Super simple spatial join
states_sf %>%
st_join(states_prj)
sites_sf <-
read_csv("data/raw/wk3/sites.csv") %>%
st_as_sf(
x = sites,
coords = c('lon', 'lat'),
remove = FALSE,
crs = 4326) %>%
st_transform(st_crs(states_prj))
# Super simple spatial join!
# Needed to change crs
states_sf %>%
st_join(states_prj)
sites_sf <-
read_csv("data/raw/wk3/sites.csv") %>%
st_as_sf(
x = sites,
coords = c('lon', 'lat'),
remove = FALSE,
crs = 4326) %>%
st_transform(st_crs(states_prj))
## Setup
library(tidyverse)
library(sf)
# Reads in the census shapefile
census_sp <-
rgdal::readOGR('data/raw/spatial/census/census.shp')
# Outputs the coordinate reference system for these data
census_sp@proj4string
# Separates the data by state after first converting to simple features objects
dc_sp <- census_sp %>%
st_as_sf() %>%
filter(state_name == "DC")
md_sp <- census_sp %>%
st_as_sf() %>%
filter(state_name == "Maryland")
va_sp <- census_sp %>%
st_as_sf() %>%
filter(state_name == "Virginia")
# Determines the spatial extent of each state
# DC's area
sum(st_area(dc_sp))
# Maryland's area
sum(st_area(md_sp))
# Virginia's area
sum(st_area(va_sp))
# Plots DC using ggplot
dc_sp %>%
ggplot() +
geom_sf()
# Creates a weird boundary whereby VA's claim to Delmarva is connected to
# mainland VA. Thus, I attempt to use SF and not SP.
va_dsslvd <- rgeos::gUnaryUnion(census_sp[census_sp$state_name == "Virginia",])
sp::plot(va_dsslvd)
# Creates a weird boundary whereby VA's claim to Delmarva is connected to
# mainland VA. Thus, I attempt to use SF and not SP.
va_dsslvd <- rgeos::gUnaryUnion(census_sp[census_sp$state_name == "Virginia",]) %>%
st_as_sf
va_dsslvd %>%
ggplot() +
geom_sf()
sp::plot(rgeos::gUnaryUnion(census_sp))
va_dsslvd <- rgeos::gUnaryUnion(census_sp[census_sp$state_name == "Virginia",])
# Plots VA using sp
sp:plot(va_dsslvd)
# Plots VA using sp
sp::plot(va_dsslvd)
census_sp <-
rgdal::readOGR('data/raw/spatial/census/census.shp')
# Outputs the coordinate reference system for these data
census_sp@proj4string
# Separates the data by state after first converting to simple features objects
dc_sp <- census_sp[census_sp$state_name == "DC",]
md_sp <- census_sp[census_sp$state_name == "Maryland",]
va_sp <- census_sp[census_sp$state_name == "Virginia",]
sp::plot(dc_sp)
st_area(dc_sp)
dc_sp@polygons
# DC's area
sum(st_area(dc_sp@polygons))
dc_sp@polygons
st_area(dc_sp@polygons)
dc_sp@polygons$area
dc_sp@polygons
dc_sp@polygons@area
dc_sp$ALAND
sum(dc_sp$ALAND)
# DC's area
sum(dc_sp$ALAND) + sum(dc_sp$AWATER)
sum(dc_sp$ALAND) + sum(dc_sp$AWATER)
# Maryland's area (Land & Water)
sum(md_sp$ALAND) + sum(md_sp$AWATER)
# Virginia's area (Land & Water)
sum(va_sp$ALAND) + sum(va_sp$AWATER)
# Note: Creates a weird boundary whereby VA's claim to Delmarva is connected to
# mainland VA.
va_dsslvd <- rgeos::gUnaryUnion(va_sp)
# Plots VA using sp
sp::plot(va_dsslvd)
# Creates a point object for our classroom
classroom_sp <- SpatialPoints(c(-77.075212, 38.90677), proj4string = "+proj=longlat +datum=WGS84")
# Creates a point object for our classroom
classroom_sp <- SpatialPoints(cbind(-77.075212, 38.90677), proj4string = "+proj=longlat +datum=WGS84")
# Creates a point object for our classroom
classroom_sp <- SpatialPoints(cbind(-77.075212, 38.90677), proj4string = CRS("+proj=longlat +datum=WGS84"))
# Changes "dc_sp" to "dc_sf" (a simple features object)
dc_sf <- dc_sp %>%
st_as_sf()
# Changes the classroom point to a simple features object
classroom_sp %>%
st_as_sf()
# Changes the classroom point to a simple features object
classroom_sf <- classroom_sp %>%
st_as_sf()
crs(classroom_sf)
st_crs(classroom_sf)
st_crs(dc_sf)
# Changes the classroom point's crs to NAD83
classroom_prj <- classroom_sf %>%
st_transform(
st_crs(dc_sf))
dc_sf %>%
st_join(classroom_prj)
classroom_prj %>%
st_join(dc_sf)
# Finds the census tract for our classroom & returns the population
classroom_prj %>%
st_join(dc_sf) %>%
pull(population)
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
scale_fill_viridis_a(option = "plasma") +
theme_minimal()
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
geom_sf(classroom_prj) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
classroom_prj
classroom_prj
classroom_prj$geometry
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
geom_point(classroom_prj) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
coord_sf(classroom_prj) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
geom_sf(classroom_prj, aes(geometry = geometry), show.legend = "point") +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
geom_point(classroom_prj) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
classroom_prj
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(classroom_prj) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_prj) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_prj, color = "red") +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_prj, color = "red", shape = "*") +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_prj, color = "red", shape = "*", size = 10) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_prj, color = "red", shape = "*", size = 5) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_prj, color = "red",
shape = "*", size = 7) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_prj, color = "red",
shape = "*", size = population) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_prj, color = "red",
shape = "*", size = 7) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
classroom_prj
classroom_tract <- classroom_prj %>%
st_join(dc_sf)
classroom_tract$population
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_tract, color = "red",
shape = "*", size = population) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
classroom_tract
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_tract, color = "red",
shape = "*", size = 7) +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_tract, aes(size = population/1000), color = "red",
shape = "*") +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_tract, aes(size = population/500), color = "red",
shape = "*") +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_tract, aes(size = population/100), color = "red",
shape = "*") +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_tract, aes(size = population/10), color = "red",
shape = "*") +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
geom_sf(aes(fill = edu)) +
stat_sf_coordinates(data = classroom_tract, aes(size = population), color = "red",
shape = "*") +
scale_fill_viridis_b(option = "plasma") +
theme_minimal()
classroom_tract$population
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
# Adds in the education data as fill color for each tract
geom_sf(aes(fill = edu)) +
# adds the classroom point, changes its color and shape,
# and scales by population
stat_sf_coordinates(data = classroom_tract, aes(size = population), color = "red",
shape = "*") +
# Changes the color scale to viridis's plasma option
scale_fill_viridis_b(option = "plasma") +
# Sets the theme to minimal
theme_minimal()
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
# Adds in the education data as fill color for each tract
geom_sf(aes(fill = edu)) +
# adds the classroom point, changes its color and shape,
# and scales by population
stat_sf_coordinates(data = classroom_tract, aes(size = 1), color = "red",
shape = "*") +
# Changes the color scale to viridis's plasma option
scale_fill_viridis_b(option = "plasma") +
# Sets the theme to minimal
theme_minimal()
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
# Adds in the education data as fill color for each tract
geom_sf(aes(fill = edu)) +
# adds the classroom point, changes its color, shape, size
stat_sf_coordinates(data = classroom_tract, color = "red",
shape = "*", size = 7) +
# Changes the color scale to viridis's plasma option
scale_fill_viridis_b(option = "plasma") +
# Sets the theme to minimal
theme_minimal()
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
# Adds in the education data as fill color for each tract
geom_sf(aes(fill = edu)) +
# Adds the classroom point, changes its color, shape, size
stat_sf_coordinates(data = classroom_tract, aes(size = population), color = "red",
shape = "*", size = 7) +
# Changes the color scale to viridis's plasma option
scale_fill_viridis_b(option = "plasma") +
# Adds labels
labs(title = "Education in DC",
fill = "Education",
caption = "Source: Census data")
# Sets the theme to minimal
theme_minimal()
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
# Adds in the education data as fill color for each tract
geom_sf(aes(fill = edu)) +
# Adds the classroom point, changes its color, shape, size
stat_sf_coordinates(data = classroom_tract, aes(size = population), color = "red",
shape = "*", size = 7) +
# Changes the color scale to viridis's plasma option
scale_fill_viridis_b(option = "plasma") +
# Adds labels
labs(title = "Education in DC",
fill = "Education",
x = "Longitude",
y = "Latitude",
caption = "Source: Census data") +
# Sets the theme to minimal
theme_minimal()
# Plots education levels in DC & adds a point for our classroom
dc_sf %>%
ggplot() +
# Adds in the education data as fill color for each tract
geom_sf(aes(fill = edu)) +
# Adds the classroom point, changes its color, shape, size
stat_sf_coordinates(data = classroom_prj, color = "red",
shape = "*", size = 7) +
# Changes the color scale to viridis's plasma option
scale_fill_viridis_b(option = "plasma") +
# Adds labels
labs(title = "Education in DC",
fill = "Education",
x = "Longitude",
y = "Latitude",
caption = "Source: Census data") +
# Sets the theme to minimal
theme_minimal()
